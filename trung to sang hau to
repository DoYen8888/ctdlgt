#include <iostream>
#include <stack>
#include <string>
using namespace std;

int precedence(char op) {
    if (op == '+' || op == '-') return 1;
    if (op == '*' || op == '/') return 2;
    return 0;
}

string infixToPostfix(const string& exp) {
    stack<char> st;
    string result;

    for (char c : exp) {
        if (isalpha(c)) {
            result += c;
        } else if (c == '(') {
            st.push(c);
        } else if (c == ')') {
            while (!st.empty() && st.top() != '(') {
                result += st.top();
                st.pop();
            }
            if (!st.empty()) st.pop(); // bỏ dấu '('
        } else if (c == '+' || c == '-' || c == '*' || c == '/') {
            while (!st.empty() && precedence(st.top()) >= precedence(c)) {
                result += st.top();
                st.pop();
            }
            st.push(c);
        }
    }

    while (!st.empty()) {
        result += st.top();
        st.pop();
    }

    return result;
}

int main() {
    int T;
    cin >> T;
    cin.ignore(); // bỏ dòng trống sau T

    while (T--) {
        string exp;
        getline(cin, exp);
        cout << infixToPostfix(exp) << endl;
    }

    return 0;
}
