#include <iostream>
#include <vector>
#include <queue>
#include <stack>
#include <unordered_map>
using namespace std;

struct Canh {
    int cha, con;
    char kieu;
};

void duyetXoanOc(int n, vector<Canh>& canh) {
    unordered_map<int, pair<int,int>> cay; // cha -> {con trai, con phai}
    unordered_map<int,bool> laCon;

    for(auto& c : canh) {
        if(c.kieu == 'L') cay[c.cha].first = c.con;
        else cay[c.cha].second = c.con;
        laCon[c.con] = true;
    }

    int goc = -1;
    for(auto& c : canh) {
        if(!laCon[c.cha]) {
            goc = c.cha;
            break;
        }
    }

    if (goc == -1) return; // nếu không tìm được gốc thì dừng

    stack<int> s1, s2;
    s1.push(goc);

    while(!s1.empty() || !s2.empty()) {
        while(!s1.empty()) {
            int nut = s1.top(); s1.pop();
            cout << nut << " ";
            // lưu ý đẩy con phải trước con trái vào s2
            if (cay[nut].second) s2.push(cay[nut].second);
            if (cay[nut].first) s2.push(cay[nut].first);
        }
        while(!s2.empty()) {
            int nut = s2.top(); s2.pop();
            cout << nut << " ";
            // đẩy con trái trước con phải vào s1
            if (cay[nut].first) s1.push(cay[nut].first);
            if (cay[nut].second) s1.push(cay[nut].second);
        }
    }
    cout << "\n";
}

int main() {
    int T; cin >> T;
    while(T--) {
        int N; cin >> N;
        vector<Canh> canh(N);
        for(int i = 0; i < N; ++i)
            cin >> canh[i].cha >> canh[i].con >> canh[i].kieu;
        duyetXoanOc(N, canh);
    }
    return 0;
}
