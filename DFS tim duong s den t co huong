#include<bits/stdc++.h>
using namespace std;

int parent[1005];
vector<int> adj[1005];
bool visit[1005];

int V, E,s,t;

void DFS(int u){
	visit[u] = true;
	for(int v : adj[u]){
		if(!visit[v]){
			parent[v]= u;
			DFS(v);
		
		}
	}
}

void path(int s, int t){
	vector<int> road;
	while(t!=-1){
		road.push_back(t);
		t = parent[t];
	}
	
	reverse(road.begin(), road.end());
	
	if(road[0]!=s) cout<<-1<<endl;
	else{
		for(int i:road){
			cout<<i<<" ";
		}
		cout<<endl;
	}
}
int main(){
	int T;
	cin>>T;
	while(T--){
		cin>>V>>E>>s>>t;
		
		for(int i=1;i<=V;i++){
			adj[i].clear();
			visit[i]= false;
			parent[i]=-1;
		}
		
		for(int i=0;i<E;i++){
			int u,v;
			cin>>u>>v;
			adj[u].push_back(v);
		}
		
	
		DFS(s);
		path(s,t);
	}
	return 0;
}
