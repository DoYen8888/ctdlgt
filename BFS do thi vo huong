#include <iostream>
#include <vector>
#include <queue>
#include <algorithm>
using namespace std;

vector<int> adj[1005];      
bool visited[1005];         
vector<int> result;         


void bfs(int s) {
    queue<int> q;
    q.push(s);
    visited[s] = true;

    while (!q.empty()) {
        int u = q.front(); q.pop();
        result.push_back(u);  

        for (int v : adj[u]) {
            if (!visited[v]) {
                visited[v] = true;
                q.push(v);
            }
        }
    }
}

int main() {
    int T; cin >> T;  
    while (T--) {
        int V, E, s;
        cin >> V >> E >> s;  

        
        for (int i = 1; i <= V; ++i) {
            adj[i].clear();
            visited[i] = false;
        }
        result.clear();

     
        for (int i = 0; i < E; ++i) {
            int u, v;
            cin >> u >> v;
            adj[u].push_back(v);
            adj[v].push_back(u);  
        }

       
        bfs(s);  
        for (int v : result)
            cout << v << " ";
        cout << endl;
    }
    return 0;
}
